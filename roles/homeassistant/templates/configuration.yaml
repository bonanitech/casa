homeassistant:
{% for key, value in homeassistant_general_config.items() %}
  {{key}}: {{value}}
{% endfor %}
  auth_providers:
    - type: trusted_networks
      allow_bypass_login: true
      trusted_networks:
{% for network in homeassistant_http.trusted_networks %}
        - {{network}}
{% endfor %}
    - type: homeassistant

# Discover some devices automatically
# discovery:

system_health:

# View all events in a logbook
logbook:

# Enables the frontend
frontend:

# Enables lovelace
lovelace:
  mode: yaml

# Enable config editor
config:

# Allows you to issue voice commands from the frontend
conversation:

# Track the sun
sun:

# Enable Mobile (and Mac) app
mobile_app:

logger:
  default: info
  logs:
    homeassistant.components.device_tracker: error
    homeassistant.components.device_tracker.nmap_tracker: error
    # homeassistant.components.device_tracker.ping: warn
    # homeassistant.components.http: warn
    # homeassistant.components.automation: debug

# The 'history' component is the history tab in the homeassitant UI. This tends to be very slow. We use
# prometheus+grafana instead for historic data, so we can disable this.
history:

prometheus:
  namespace: homeassistant

notify:
  # Hass only works with legacy slack tokens
  # https://api.slack.com/custom-integrations/legacy-tokens
  # Slack's advantage over pushbullet is the ability to format messages and more customizable notification preferences
  # Note that username needs to be set to a different user than the one logged in to a device (e.g. phone)
  # for notifications to show up (messages from one-self do not generate notifications)
  # If username is not specified below, then messages will come from one-self (and hence no notifications)
  - name: slack
    platform: slack
    api_key: "{{slack_api_key}}"
    default_channel: "{{slack_default_channel}}"
    username: "{{slack_username}}"


device_tracker:
  - platform: nmap_tracker
    hosts: {{nmap_tracker_hosts}}
    track_new_devices: no
    consider_home: 1200
    interval_seconds: 5
    exclude:
{% for excluded_target in nmap_exclude %}
      - {{excluded_target}}
{% endfor %}
    # Newline required here so ansible doesn't mess up the indentation after 'endfor'
  - platform: ping
    track_new_devices: yes
    count: 3
    interval_seconds: 5
    consider_home: 7
    hosts:
{% for key, value in device_tracker_ping.items() %}
      {{key}}: {{value}}
{% endfor %}


tradfri:
  host: {{tradfri_ip}}
  # allow_tradfri_groups: true # Doesn't seem to work anymore?, use light groups below

homematic:
  interfaces:
    rf:
      host: "{{homematic_controller_ip}}"
      resolvenames: json
      username: "{{homematic_controller_username}}"
      password: "{{homematic_controller_password}}"
  hosts:
    ccu2:
      host: "{{homematic_controller_ip}}"
      username: "{{homematic_controller_username}}"
      password: "{{homematic_controller_password}}"

# Creating own groups so we can control all lights at once, working around
# this and other issues:
# https://github.com/home-assistant/home-assistant/issues/9801
light:
  - platform: group
    name: bathroom_group
    entities:
      - light.bathroom_left_back
      - light.bathroom_left_front
      - light.bathroom_right_back
      - light.bathroom_right_front
      - light.bathroom_shower
  - platform: group
    name: Office
    entities:
      - light.office_lamp_1
      - light.office_lamp_2
      - light.office_lamp_3
  - platform: group
    name: Dining Table
    entities:
      - light.eetkamer_lamp_1
      - light.eetkamer_lamp_2
      - light.eetkamer_lamp_3
  - platform: group
    name: Hallway
    entities:
      - light.hal_lamp_1
      - light.hal_lamp_2
      - light.hal_lamp_3


nest:
    client_id: {{nest_client_id}}
    client_secret: {{nest_client_secret}}

emulated_hue: !include emulated_hue.yaml

tts:
  - platform: amazon_polly
    aws_access_key_id: "{{aws_polly_access_key_id}}"
    aws_secret_access_key: "{{aws_polly_secret_access_key}}"

zwave:
  usb_path: "{{zwave_gateway_device_container}}"

rest_command:
  start_morning_tv:
    url: "http://{{groups["tv_controller"][0]}}:8000/show_url?url=http://{{casa_ip}}:{{homeassistant_port}}/lovelace/default_view"
    username: "{{tv_api_username}}"
    password: "{{tv_api_password}}"



# Enable Simple Service Discovery Protocol (for detecting Samsung Smart TV)
ssdp:

samsungtv:
  - host: "{{tv_livingroom_host}}"

sensor: !include sensors/sensor.yaml
binary_sensor: !include sensors/binary.yaml
input_select: !include inputs/select.yaml
input_boolean: !include inputs/boolean.yaml
script: !include scripts.yaml
group: !include groups.yaml
scene: !include_dir_merge_list scenes/
automation: !include_dir_merge_list automations/
